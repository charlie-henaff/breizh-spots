{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","playing","items","disabledItemKeys","readRemoteFile","process","complete","results","setState","data","console","log","comments","name","url","itemKey","this","Grid","item","xs","sm","md","lg","Paper","elevation","Box","p","style","position","paddingBottom","paddingTop","height","width","top","left","muted","controls","onError","e","m","target","rel","href","className","IconButton","color","onClick","container","spacing","filter","includes","map","addPlayerGridItem","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+VA4FeA,E,kDAlFX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,SAAS,EACTC,MAAO,KACPC,iBAAkB,IALP,E,qDASnB,WAAqB,IAAD,OAChBC,YAAe,GAAD,OAAIC,gBAAJ,YAAsC,CAChDC,SAAU,SAACC,GACP,EAAKC,SAAS,CAAEN,MAAOK,EAAQE,OAC/BC,QAAQC,IAAI,EAAKX,MAAME,QAE3BU,UAAU,M,+BAIlB,SAAkBC,EAAMC,EAAKb,EAASc,GAAU,IAAD,OACnCZ,EAAqBa,KAAKhB,MAA1BG,iBAER,OACI,cAACc,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArC,SACI,cAACC,EAAA,EAAD,CAAOC,UAAW,EAAlB,SACI,eAACC,EAAA,EAAD,CAAKC,EAAG,EAAR,UACI,qBACIC,MAAO,CACHC,SAAU,WACVC,cAAe,SACfC,WAAY,GACZC,OAAQ,GALhB,SAOI,cAAC,IAAD,CACIC,MAAM,OACND,OAAO,OACPJ,MAAO,CACHC,SAAU,WACVK,IAAK,EACLC,KAAM,GAEVpB,IAAKA,EACLb,QAASA,EACTkC,OAAO,EACPC,UAAU,EACVC,QAAS,SAACC,GACN5B,QAAQC,IAAI2B,GAzBJ,EAAK9B,SAAS,CAAEL,iBAAiB,GAAD,mBAAMA,GAAN,CAAwBY,WA6B5E,cAACU,EAAA,EAAD,CAAKc,EAAG,EAAR,SAAW,mBAAGC,OAAO,SAASC,IAAI,sBAAsBC,KAAI,4CAAuC7B,GAAxF,SAAgG,4BAAIA,cA3B9EE,K,oBAkCrD,WAAU,IAAD,OACL,EAA6CC,KAAKhB,MAA1CC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,iBACxB,OACI,sBAAKwC,UAAU,MAAf,UACI,yBAAQA,UAAU,aAAlB,UACI,mDACA,qBAAKA,UAAU,qBAAf,SACI,cAACC,EAAA,EAAD,CAAYC,MAAM,YAAYC,QAAS,kBAAM,EAAKtC,SAAS,CAAEP,SAAUA,KAAvE,SACKA,EAAU,cAAC,IAAD,IAAgB,cAAC,IAAD,WAIvC,qBAAK0C,UAAU,cAAf,SACI,cAAC1B,EAAA,EAAD,CAAM8B,WAAS,EAACC,QAAS,EAAzB,SACK9C,GAASA,EACL+C,QAAO,SAAA/B,GAAI,OAAKf,EAAiB+C,SAAShC,EAAK,OAC/CiC,KAAI,SAAAjC,GAAI,OAAI,EAAKkC,kBAAkBlC,EAAK,GAAIA,EAAK,GAAIjB,EAASiB,EAAK,kB,GA3E9EmC,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9cca27d9.chunk.js","sourcesContent":["import { Box, Grid, IconButton, Paper } from '@material-ui/core';\nimport PauseIcon from '@material-ui/icons/PauseRounded';\nimport PlayIcon from '@material-ui/icons/PlayArrowRounded';\nimport { Component } from 'react';\nimport { readRemoteFile } from 'react-papaparse';\nimport ReactPlayer from 'react-player';\nimport './App.css';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            playing: false,\n            items: null,\n            disabledItemKeys: [],\n        }\n    }\n\n    componentDidMount() {\n        readRemoteFile(`${process.env.PUBLIC_URL}/cam.csv`, {\n            complete: (results) => {\n                this.setState({ items: results.data });\n                console.log(this.state.items);\n            },\n            comments: true\n        });\n    }\n\n    addPlayerGridItem(name, url, playing, itemKey) {\n        const { disabledItemKeys } = this.state;\n        const addToDisabledItemsKey = () => this.setState({ disabledItemKeys: [...disabledItemKeys, itemKey] });\n        return (\n            <Grid item xs={12} sm={6} md={4} lg={3} key={itemKey} >\n                <Paper elevation={3}>\n                    <Box p={1}>\n                        <div\n                            style={{\n                                position: \"relative\",\n                                paddingBottom: \"56.25%\" /* 16:9 */,\n                                paddingTop: 25,\n                                height: 0\n                            }}>\n                            <ReactPlayer\n                                width=\"100%\"\n                                height=\"100%\"\n                                style={{\n                                    position: \"absolute\",\n                                    top: 0,\n                                    left: 0,\n                                }}\n                                url={url}\n                                playing={playing}\n                                muted={true}\n                                controls={true}\n                                onError={(e) => {\n                                    console.log(e);\n                                    addToDisabledItemsKey();\n                                }} />\n                        </div>\n                        <Box m={1}><a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://www.google.fr/maps/search/${name}`}><b>{name}</b></a></Box>\n                    </Box>\n                </Paper>\n            </Grid>\n        );\n    }\n\n    render() {\n        const { playing, items, disabledItemKeys } = this.state;\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <h2>Breizh spots live</h2>\n                    <div className=\"App-header-actions\">\n                        <IconButton color=\"secondary\" onClick={() => this.setState({ playing: !playing })}>\n                            {playing ? <PauseIcon /> : <PlayIcon />}\n                        </IconButton>\n                    </div>\n                </header>\n                <div className=\"App-content\">\n                    <Grid container spacing={3}>\n                        {items && items\n                            .filter(item => !disabledItemKeys.includes(item[1]))\n                            .map(item => this.addPlayerGridItem(item[0], item[1], playing, item[1]))\n                        }\n                    </Grid>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}